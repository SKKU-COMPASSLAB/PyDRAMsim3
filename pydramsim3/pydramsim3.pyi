from ctypes import c_void_p
from typing import Callable

__all__ = [
    "create_msys",
    "destroy_msys",
    "create_msys_cmd",
    "destroy_msys_cmd",
    "check_msys_cmd_dispatched",
    "check_msys_cmd_executed",
    "get_expected_cmd_cycles",
    "msys_dispatch_cmd",
    "msys_cycle_step",
    "msys_get_tck"
]

def create_msys(config_file: str, output_dir: str, cmd_queue_num: int) -> c_void_p: ...
def create_msys_cmd(cmd_q_id: int, addr: int, size: int, is_write: bool) -> c_void_p: ...

def check_msys_cmd_dispatched(cmd: c_void_p) -> bool: ...
def check_msys_cmd_executed(cmd: c_void_p) -> bool: ...
def get_expected_cmd_cycles(msys: c_void_p, cmd: c_void_p) -> int: ...

def msys_dispatch_cmd(msys: c_void_p, cmd: c_void_p, dispatch_callback: Callable=None, execute_callback: Callable=None) -> bool: ...
def msys_cycle_step(msys: c_void_p, cycles: int) -> None: ...
def msys_get_tck(msys: c_void_p) -> float: ...